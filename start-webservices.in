#!/bin/bash
###############################################################################
# NAME:             start-webservices
#
# AUTHOR:           Ethan D. Twardy <edtwardy@mtu.edu>
#
# DESCRIPTION:      Start the edtwardy-webservices docker services
#
# CREATED:          05/01/2021
#
# LAST EDITED:      05/26/2021
###

read -r -d '' USAGE <<EOF
$(basename $0): Start Docker Web Services
EOF

shopt -s extglob
set -e

# (start-webservices.in): These are replaced with the actual definitions
CONFIG_VOLUMES_DEF
DATA_VOLUMES_DEF

LOG_TAG='start-webservices'

# Read the configuration file (with defaults set)
volumeDirectory=/var/data/
. /etc/edtwardy-webservices/docker-volume-manager.conf

# join: Join a bash array by a delimiter
join() {
    local d=${1-} f=${2-};
    if shift 2; then
        printf %s "$f" "${@/#/$d}"
    fi
}

# getConfigVolumesToCreate: Get subset of config volumes we need to create
getVolumesToCreate() {
    existingVolumes=($(docker volume ls | tail -n+2 | awk '{print $2}'))
    pattern=$(join '|' ${existingVolumes[@]})
    neededConfigVolumes=${CONFIG_VOLUMES[@]//*($pattern)?( )}
    neededDataVolumes=${DATA_VOLUMES[@]//*($pattern)?( )}
    printf '%s\n' "${neededConfigVolumes[@]} ${neededDataVolumes[@]}"
}

syncVolumes() {
    # Create missing volumes, if any
    printf ${LOG_TAG}': %s\n' "Checking for missing volumes"
    for volume in $(getVolumesToCreate); do
        printf ${LOG_TAG}': Creating volume %s\n' $volume
        docker volume create $volume
    done

    # Perform set-up for docker-volume-manager
    dataVolumeManifest=$volumeDirectory/data-volumes.manifest
    if [[ ! -f $dataVolumeManifest ]]; then
        printf ${LOG_TAG}': Creating %s\n' $dataVolumeManifest
        mkdir -p $(dirname $dataVolumeManifest)
        printf '%s\n' "${DATA_VOLUMES[@]}" > $dataVolumeManifest
    fi

    # Spin up a docker container to synchronize all of the volumes
    volumeSpec=""
    for volume in "${CONFIG_VOLUMES[@]}"; do
        volumeSpec="${volumeSpec} -v ${volume}:/${volume}"
    done

    printf ${LOG_TAG}': %s\n' "Starting docker-volume-manager"
    containerName='edtwardy-webservices_volumemanager'
    trap "docker stop $containerName" EXIT
    docker run -t --rm --name $containerName $volumeSpec \
           -v $volumeStateDirectory:/state \
           -v $dataVolumeDirectory:/datavolumes \
           -v $configVolumeDirectory:/configvolumes \
           edtwardy/volumemanager:latest
    trap - EXIT
}

RC=0
case $1 in
    start)
        syncVolumes
        printf ${LOG_TAG}': %s\n' "Starting docker services"
        docker-compose up
        ;;
    *)
        >&2 printf '%s\n' "$USAGE"
        RC=1
        ;;
esac

###############################################################################
